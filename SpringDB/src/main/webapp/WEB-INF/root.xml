<?xml version="1.0"?>
<beans
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans">
	
	<!-- 데이터베이스 연동 관련 -->
	 <!-- 데이터 소스 dataSource 결정
	 	resource-rf : java:comp/env를 사용하여 검색함
	 	어떤 db를 쓸지 알려주는 것 
	  -->
	<jee:jndi-lookup 
	id="dataSource" 
	jndi-name="jdbc/myoracle" 
	resource-ref="true"/>
	
	<!-- 개발자 대신 트랜잭션을 처리해주는 빈을 등록, 빈의 이름은 기술 종류에 따라 여러유형으로 나뉜다.
	JPA : JPATranssactionManger (Sun사의 ORM 기술)
	Hibernate : HibernateTransactionManger (사설 ORM기술)
	jdbc : DataSourceTransactionManager
	myBatis : DataSourceTransactionManager (mybatis는 내부적으로 jdbc를 쓰기 때문 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/> <!-- 이부분이 있어야 위의 jee부분을 가져옴 즉 oracle용이 됨 -->
	</bean>

	<!--트랜잭션 설정  -->
	<tx:annotation-driven/>

	<!-- 우리 프로젝트 -->
	<!-- 스프링이 지원하는 jdbc 기술 객체 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--mybatis가 지원하는 쿼리 객체 왜 써야하나? 스프링으로부터 트랜잭션 등을 지원받기 위해  -->
	<!--sqlSessionTemplate 을 추출하려면, SqlSessionFactoryBean으로부터 가져올 수 있다.  -->
	<bean id="factoryBean" 
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:com/academy/springdb/mybatis/config.xml" />
	</bean>
	
	<!-- DAO에 주입할 SqlSessionTemplate 등록 MybatisNewsDAO의SqlSessionTemplate의 변수명과 같아야함 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="factoryBean" />
	</bean>
	
	<!-- 모든 서블릿에서 접근할 공통 빈을 등록한다. -->
	<context:component-scan base-package="com.academy.springdb.model"/>
	
	
</beans>